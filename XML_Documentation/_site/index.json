{
  "api/Global.AiUnit.html": {
    "href": "api/Global.AiUnit.html",
    "title": "Class AiUnit | Example Unity documentation",
    "keywords": "Class AiUnit Represents an AI-controlled unit in the game. Inheritance object Unit AiUnit Inherited Members Unit.UnitGO Unit.UnitSpecs Unit.Select(bool) Namespace: Global Assembly: .dll Syntax public class AiUnit : Unit Fields agent The NavMeshAgent component used for navigation. Declaration protected NavMeshAgent agent Field Value Type Description NavMeshAgent Methods SetDestination(Vector3) Sets the destination for the AI unit to navigate to. Declaration public void SetDestination(Vector3 _destination) Parameters Type Name Description Vector3 _destination The destination position. Start() Initializes the AI unit. Declaration protected override void Start() Overrides Unit.Start() UnitDeployed() Called when the AI unit is deployed. Declaration public override void UnitDeployed() Overrides Unit.UnitDeployed()"
  },
  "api/Global.ApplicationController.html": {
    "href": "api/Global.ApplicationController.html",
    "title": "Class ApplicationController | Example Unity documentation",
    "keywords": "Class ApplicationController Manages the application and its core functionalities. Inheritance object SingletonMono<ApplicationController> ApplicationController Inherited Members SingletonMono<ApplicationController>.Instance SingletonMono<ApplicationController>.OnDestroy() Namespace: Global Assembly: .dll Syntax public class ApplicationController : SingletonMono<ApplicationController> Fields Spice The current amount of spice in the game. Declaration public ReactiveProperty<int> Spice Field Value Type Description ReactiveProperty<int> Properties AiUnitFactory The factory for creating AI units. Declaration public UnitFactory<AiUnit> AiUnitFactory { get; } Property Value Type Description UnitFactory<AiUnit> BuildingFactory The factory for creating building units. Declaration public UnitFactory<BuildingUnit> BuildingFactory { get; } Property Value Type Description UnitFactory<BuildingUnit> Methods BuildUnit(string, GameObject, UnitSpecsSO) Builds a unit of the specified type. Declaration public Unit BuildUnit(string _type, GameObject _go, UnitSpecsSO _unitSpecs) Parameters Type Name Description string _type The type of unit to build. GameObject _go The GameObject associated with the unit. UnitSpecsSO _unitSpecs The specifications of the unit. Returns Type Description Unit The built unit. Init() Initializes the application components. Declaration public void Init() UndoUnitBuild() Undoes the last unit build operation. Declaration public void UndoUnitBuild()"
  },
  "api/Global.BuildingUnit.html": {
    "href": "api/Global.BuildingUnit.html",
    "title": "Class BuildingUnit | Example Unity documentation",
    "keywords": "Class BuildingUnit Represents a building unit in the game. Inheritance object Unit BuildingUnit Inherited Members Unit.UnitGO Unit.UnitSpecs Unit.Start() Unit.UnitDeployed() Unit.Select(bool) Namespace: Global Assembly: .dll Syntax public class BuildingUnit : Unit"
  },
  "api/Global.CameraController.html": {
    "href": "api/Global.CameraController.html",
    "title": "Class CameraController | Example Unity documentation",
    "keywords": "Class CameraController Controls the behavior of the camera in the game. Inheritance object CameraController Namespace: Global Assembly: .dll Syntax public class CameraController : MonoBehaviour Fields PanSpeed The speed of panning. Declaration public float PanSpeed Field Value Type Description float ZoomMaxY The maximum y-axis value for zooming. Declaration public float ZoomMaxY Field Value Type Description float ZoomMinY The minimum y-axis value for zooming. Declaration public float ZoomMinY Field Value Type Description float ZoomSpeed The speed of zooming. Declaration public float ZoomSpeed Field Value Type Description float Methods HandleMouseMiddleDown(bool) Handles the middle mouse button state. Declaration public void HandleMouseMiddleDown(bool b) Parameters Type Name Description bool b The state of the middle mouse button. Init() Initializes the CameraController. Declaration public void Init()"
  },
  "api/Global.ICommand.html": {
    "href": "api/Global.ICommand.html",
    "title": "Interface ICommand | Example Unity documentation",
    "keywords": "Interface ICommand An interface for commands, defines a command Namespace: Global Assembly: .dll Syntax public interface ICommand Methods Execute() Declaration void Execute() UnExecute() Declaration void UnExecute()"
  },
  "api/Global.IObserver-1.html": {
    "href": "api/Global.IObserver-1.html",
    "title": "Interface IObserver<T> | Example Unity documentation",
    "keywords": "Interface IObserver<T> Observer interface Namespace: Global Assembly: .dll Syntax public interface IObserver<T> Type Parameters Name Description T observer T Methods SubjectChange(ISubject<T>) Declaration void SubjectChange(ISubject<T> subject) Parameters Type Name Description ISubject<T> subject"
  },
  "api/Global.ISubject-1.html": {
    "href": "api/Global.ISubject-1.html",
    "title": "Interface ISubject<T> | Example Unity documentation",
    "keywords": "Interface ISubject<T> An interface for Subject, has functions to attach, detach and notify. Namespace: Global Assembly: .dll Syntax public interface ISubject<T> Type Parameters Name Description T Subject that can be changed by the observer Properties Value Declaration T Value { get; set; } Property Value Type Description T Methods Attach(IObserver<T>) Declaration void Attach(IObserver<T> observer) Parameters Type Name Description IObserver<T> observer Detach(IObserver<T>) Declaration void Detach(IObserver<T> observer) Parameters Type Name Description IObserver<T> observer Notify() Declaration void Notify()"
  },
  "api/Global.InputController.html": {
    "href": "api/Global.InputController.html",
    "title": "Class InputController | Example Unity documentation",
    "keywords": "Class InputController Manages user input and responds to it in the game. Inheritance object SingletonMono<InputController> InputController Inherited Members SingletonMono<InputController>.Instance SingletonMono<InputController>.OnDestroy() Namespace: Global Assembly: .dll Syntax public class InputController : SingletonMono<InputController> Fields MouseLeftDown Gets or sets a value indicating whether the left mouse button is pressed. Declaration public ReactiveProperty<bool> MouseLeftDown Field Value Type Description ReactiveProperty<bool> MouseMiddleDown Gets or sets a value indicating whether the middle mouse button is pressed. Declaration public ReactiveProperty<bool> MouseMiddleDown Field Value Type Description ReactiveProperty<bool> MouseRightDown Gets or sets a value indicating whether the right mouse button is pressed. Declaration public ReactiveProperty<bool> MouseRightDown Field Value Type Description ReactiveProperty<bool> MouseScroll Gets or sets the value of mouse scrolling. Declaration public ReactiveProperty<float> MouseScroll Field Value Type Description ReactiveProperty<float>"
  },
  "api/Global.NewUnitButton.UnitType.html": {
    "href": "api/Global.NewUnitButton.UnitType.html",
    "title": "Enum NewUnitButton.UnitType | Example Unity documentation",
    "keywords": "Enum NewUnitButton.UnitType Namespace: Global Assembly: .dll Syntax public enum NewUnitButton.UnitType Fields Name Description AiUnit BuildingUnit"
  },
  "api/Global.NewUnitButton.html": {
    "href": "api/Global.NewUnitButton.html",
    "title": "Class NewUnitButton | Example Unity documentation",
    "keywords": "Class NewUnitButton class for UI buttons including specs, type, prefabs and unit type which it will spawn Inheritance object UIButton NewUnitButton Inherited Members UIButton.ButtonComponent UIButton.Clicked UIButton.anim UIButton.Awake() UIButton.HandleClick() Namespace: Global Assembly: .dll Syntax public class NewUnitButton : UIButton Fields Specs Declaration public UnitSpecsSO Specs Field Value Type Description UnitSpecsSO Type Declaration public NewUnitButton.UnitType Type Field Value Type Description NewUnitButton.UnitType UnitPrefab Declaration public GameObject UnitPrefab Field Value Type Description GameObject"
  },
  "api/Global.ReactiveObserver-1.html": {
    "href": "api/Global.ReactiveObserver-1.html",
    "title": "Class ReactiveObserver<T> | Example Unity documentation",
    "keywords": "Class ReactiveObserver<T> A class for reactive observer Inheritance object ReactiveObserver<T> Implements IObserver<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: .dll Syntax public class ReactiveObserver<T> : IObserver<T> Type Parameters Name Description T Reactive observers type is observer Constructors ReactiveObserver(Action<T>) Object for reactive observer which includes the action to be taken Declaration public ReactiveObserver(Action<T> _action) Parameters Type Name Description Action<T> _action Action to be taken bu reactive observer Methods SubjectChange(ISubject<T>) This void can change subject as an action for reactive observer Declaration public void SubjectChange(ISubject<T> subject) Parameters Type Name Description ISubject<T> subject Subject to be changed Implements IObserver<T>"
  },
  "api/Global.ReactiveProperty-1.html": {
    "href": "api/Global.ReactiveProperty-1.html",
    "title": "Class ReactiveProperty<T> | Example Unity documentation",
    "keywords": "Class ReactiveProperty<T> reactive subject of type subject Inheritance object ReactiveProperty<T> Implements ISubject<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: .dll Syntax public class ReactiveProperty<T> : ISubject<T> Type Parameters Name Description T type subject Properties Value getter and setter for value Declaration public T Value { get; set; } Property Value Type Description T Methods Attach(IObserver<T>) Add observer to subject Declaration public void Attach(IObserver<T> observer) Parameters Type Name Description IObserver<T> observer observer Detach(IObserver<T>) remove observer from subject Declaration public void Detach(IObserver<T> observer) Parameters Type Name Description IObserver<T> observer observer Notify() ´Trigger subject change Declaration public void Notify() Operators implicit operator T(ReactiveProperty<T>) Operator for type T Declaration public static implicit operator T(ReactiveProperty<T> value) Parameters Type Name Description ReactiveProperty<T> value Value Returns Type Description T implicit operator ReactiveProperty<T>(T) operator for reactiveproperty Declaration public static implicit operator ReactiveProperty<T>(T value) Parameters Type Name Description T value Value Returns Type Description ReactiveProperty<T> Implements ISubject<T>"
  },
  "api/Global.Singleton-1.html": {
    "href": "api/Global.Singleton-1.html",
    "title": "Class Singleton<T> | Example Unity documentation",
    "keywords": "Class Singleton<T> Inheritance object Singleton<T> UnitController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: .dll Syntax public abstract class Singleton<T> where T : class, new() Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/Global.SingletonMono-1.html": {
    "href": "api/Global.SingletonMono-1.html",
    "title": "Class SingletonMono<T> | Example Unity documentation",
    "keywords": "Class SingletonMono<T> Singleton monobehaviour class Inheritance object SingletonMono<T> ApplicationController InputController Namespace: Global Assembly: .dll Syntax public class SingletonMono<T> : MonoBehaviour where T : MonoBehaviour Type Parameters Name Description T singleton type Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods OnDestroy() Destroy singleton when application is quitting Declaration protected virtual void OnDestroy()"
  },
  "api/Global.UIButton.html": {
    "href": "api/Global.UIButton.html",
    "title": "Class UIButton | Example Unity documentation",
    "keywords": "Class UIButton Class for UI button which includes its methods Inheritance object UIButton NewUnitButton Namespace: Global Assembly: .dll Syntax public class UIButton : MonoBehaviour Fields ButtonComponent Declaration public Button ButtonComponent Field Value Type Description Button Clicked Declaration public ReactiveProperty<bool> Clicked Field Value Type Description ReactiveProperty<bool> anim Declaration protected Animator anim Field Value Type Description Animator Methods Awake() On awake add listener to the button and find it in the game scene Declaration protected virtual void Awake() HandleClick() If the button is clicked... Declaration protected void HandleClick()"
  },
  "api/Global.UIController.html": {
    "href": "api/Global.UIController.html",
    "title": "Class UIController | Example Unity documentation",
    "keywords": "Class UIController UI-controller class Inheritance object UIController Namespace: Global Assembly: .dll Syntax public class UIController : MonoBehaviour Fields ButtonUndo Declaration public Button ButtonUndo Field Value Type Description Button NewUnitButtonsContainer Declaration public RectTransform NewUnitButtonsContainer Field Value Type Description RectTransform SelectionRectangle Declaration public RectTransform SelectionRectangle Field Value Type Description RectTransform TextSpiceAmount Declaration public Text TextSpiceAmount Field Value Type Description Text Methods Init() method for UI initialization, initialize all UI elements and add needed components like listeners and attach observers. Declaration public void Init()"
  },
  "api/Global.Unit.html": {
    "href": "api/Global.Unit.html",
    "title": "Class Unit | Example Unity documentation",
    "keywords": "Class Unit Base class for all units in the game. Inheritance object Unit AiUnit BuildingUnit Namespace: Global Assembly: .dll Syntax public abstract class Unit : MonoBehaviour Fields UnitGO The GameObject representing the unit. Declaration public GameObject UnitGO Field Value Type Description GameObject UnitSpecs The specifications of the unit. Declaration public UnitSpecsSO UnitSpecs Field Value Type Description UnitSpecsSO Methods Select(bool) Selects or deselects the unit. Declaration public virtual void Select(bool isSelected) Parameters Type Name Description bool isSelected True if the unit is selected, false otherwise. Start() Initializes the unit's renderers. Declaration protected virtual void Start() UnitDeployed() Called when the unit is deployed. Declaration public virtual void UnitDeployed()"
  },
  "api/Global.UnitBuildCommand.html": {
    "href": "api/Global.UnitBuildCommand.html",
    "title": "Class UnitBuildCommand | Example Unity documentation",
    "keywords": "Class UnitBuildCommand A script for building units. Inheritance object UnitBuildCommand Implements ICommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: .dll Syntax public class UnitBuildCommand : ICommand Constructors UnitBuildCommand(UnitFactory<BuildingUnit>, UnitFactory<AiUnit>, string, GameObject, UnitSpecsSO) A constructor for Build command with all the parameters in it Declaration public UnitBuildCommand(UnitFactory<BuildingUnit> _buildingFactory, UnitFactory<AiUnit> _aiUnitFactory, string _type, GameObject _go, UnitSpecsSO _unitSpecs) Parameters Type Name Description UnitFactory<BuildingUnit> _buildingFactory building factory UnitFactory<AiUnit> _aiUnitFactory AI unit factory string _type unit type GameObject _go a game object UnitSpecsSO _unitSpecs unit specs/stats Fields BuildedUnit Declaration public Unit BuildedUnit Field Value Type Description Unit Methods Execute() Execute command for building a unit. Declaration public void Execute() UnExecute() Unexecute command of building a unit by destroying it. Declaration public void UnExecute() Implements ICommand"
  },
  "api/Global.UnitController.html": {
    "href": "api/Global.UnitController.html",
    "title": "Class UnitController | Example Unity documentation",
    "keywords": "Class UnitController Controls units in the game. Inheritance object Singleton<UnitController> UnitController Inherited Members Singleton<UnitController>.Instance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: .dll Syntax public class UnitController : Singleton<UnitController> Properties CurrentUnits The list of current units in the game. Declaration public List<Unit> CurrentUnits { get; } Property Value Type Description List<Unit> Methods ClearSelectedUnits() Clears all selected units. Declaration public void ClearSelectedUnits() DeployUnit(Unit) Deploys a unit in the game. Declaration public void DeployUnit(Unit _unit) Parameters Type Name Description Unit _unit The unit to deploy. Init() Initializes the UnitController. Declaration public void Init() RemoveUnit(Unit) Removes a unit from the game. Declaration public void RemoveUnit(Unit _unit) Parameters Type Name Description Unit _unit The unit to remove. SelectUnitsWithinRect(RectTransform) Selects units within a given selection rectangle. Declaration public void SelectUnitsWithinRect(RectTransform _selectionRectangle) Parameters Type Name Description RectTransform _selectionRectangle The rectangle representing the selection area. SetAiUnitsDestination(Vector3) Sets the destination for AI units to navigate to. Declaration public void SetAiUnitsDestination(Vector3 _destination) Parameters Type Name Description Vector3 _destination The destination position."
  },
  "api/Global.UnitFactory-1.html": {
    "href": "api/Global.UnitFactory-1.html",
    "title": "Class UnitFactory<UnitT> | Example Unity documentation",
    "keywords": "Class UnitFactory<UnitT> A class for factories (both ai and building) Inheritance object UnitFactory<UnitT> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Global Assembly: .dll Syntax public class UnitFactory<UnitT> Type Parameters Name Description UnitT Methods BuildUnit(GameObject, UnitSpecsSO) A class for unit to be built with all the parameters in it, as well as functions of both ai and building units. Declaration public Unit BuildUnit(GameObject _prefab, UnitSpecsSO _unitSpecs) Parameters Type Name Description GameObject _prefab prefab of the object to be built UnitSpecsSO _unitSpecs specs for the unit to be built Returns Type Description Unit"
  },
  "api/Global.UnitSpecsSO.html": {
    "href": "api/Global.UnitSpecsSO.html",
    "title": "Class UnitSpecsSO | Example Unity documentation",
    "keywords": "Class UnitSpecsSO Contains specifications for a unit. Inheritance object UnitSpecsSO Namespace: Global Assembly: .dll Syntax public class UnitSpecsSO : ScriptableObject Properties Cost The cost of the unit. Declaration public int Cost { get; } Property Value Type Description int Health The health points of the unit. Declaration public float Health { get; } Property Value Type Description float Material The material associated with the unit. Declaration public Material Material { get; } Property Value Type Description Material MaterialSelected The material used when the unit is selected. Declaration public Material MaterialSelected { get; } Property Value Type Description Material Name The name of the unit. Declaration public string Name { get; } Property Value Type Description string Speed The speed of the unit. Declaration public float Speed { get; } Property Value Type Description float"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Example Unity documentation",
    "keywords": "Namespace Classes AiUnit Represents an AI-controlled unit in the game. ApplicationController Manages the application and its core functionalities. BuildingUnit Represents a building unit in the game. CameraController Controls the behavior of the camera in the game. InputController Manages user input and responds to it in the game. NewUnitButton class for UI buttons including specs, type, prefabs and unit type which it will spawn ReactiveObserver<T> A class for reactive observer ReactiveProperty<T> reactive subject of type subject SingletonMono<T> Singleton monobehaviour class Singleton<T> UIButton Class for UI button which includes its methods UIController UI-controller class Unit Base class for all units in the game. UnitBuildCommand A script for building units. UnitController Controls units in the game. UnitFactory<UnitT> A class for factories (both ai and building) UnitSpecsSO Contains specifications for a unit. Interfaces ICommand An interface for commands, defines a command IObserver<T> Observer interface ISubject<T> An interface for Subject, has functions to attach, detach and notify. Enums NewUnitButton.UnitType"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | Example Unity documentation",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis, ipsi manu Asiae quod marmorea. mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses!"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | Example Unity documentation",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos. Putat nubes molle Troiae vero dea; nostraque plurima. Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert. Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces, ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}